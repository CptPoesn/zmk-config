/*
  * Copyright (c) 2020 The ZMK Contributors
  *
  * SPDX-License-Identifier: MIT
  */

 #include <behaviors.dtsi>
 #include <dt-bindings/zmk/keys.h>
 #include <dt-bindings/zmk/bt.h>

 / {
         keymap {
                 compatible = "zmk,keymap";

                 default_layer {
 // -----------------------------------------------------------------------------------------
 // |  ESC |  Q  |  W    |  F    |  P      |  G  |   |  J  |  L      |  U    |  Y    |  ;  | BKSP    |
 // |  TAB |  A  | ALT R | GUI S |  CTRL T |  D  |   |  H  | CTRL  N | GUI E | ALT I |  O  | ENT     |
 // | GUI_ |  Z  |  X    |  C    |  V      |  B  |   |  N  |  M      |  ,    |  .    |  /  | SHFT "  |
 //                 | GUI | layer1 | SHFT/BACKSP |   | SPC | layer 2  | layer 3 |
                         bindings = <
     &kp ESC       &kp Q &kp W       &kp F      &kp P       &kp G            &kp J     &kp L    &kp U      &kp Y        &kp SEMI &kp BSPC
     &kp TAB       &kp A &kp R       &kp S      &kp T       &kp D            &kp H     &kp N    &kp E      &kp I        &kp O    &kp RET
     &kp LG(SPACE) &kp Z &kp X       &kp C      &kp V       &kp B            &kp K     &kp M    &kp COMMA  &kp DOT      &kp FSLH &kp SINGLE_QUOTE
                                     &kp LGUI   &mo 1       &kp BSPC         &kp SPACE &mo 2    &mo 1
                         >;
                 };
                 lower_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  !  |  @  |  &  |  $  |  {  |   |  }  |  7  |  8  |  9  |  +  |     |
// |   ~  |  /  |  |  |  ^  |  !  |  (  |   |  )  |  4  |  5  |  6  |  -  |  @  |
// |   `  |  _  |  \  |  %  |  =  |  [  |   |  ]  |  1  |  2  |  3  |  *  |  #  |
//                    |     |     |     |   |     |  0  |     |
                        bindings = <
   &kp ESC    &kp EXCL       &kp AT   &kp AMPERSAND &kp DLLR  &kp LBRC       &kp RBRC &kp N7 &kp N8 &kp N9 &kp PLUS  &trans
   &kp TILDE  &kp SLASH      &kp PIPE &kp CARET     &kp EXCL  &kp LPAR       &kp RPAR &kp N4 &kp N5 &kp N6 &kp MINUS &kp AT
   &kp GRAVE  &kp UNDERSCORE &kp BSLH &kp PERCENT   &kp EQUAL &kp LBKT       &kp RBKT &kp N1 &kp N2 &kp N3 &kp ASTRK &kp POUND
                          	          &trans     &trans       &trans         &trans   &kp N0   &trans
                         >;
                 };

                 raise_layer {
 // -----------------------------------------------------------------------------------------
// | TAB | XXX | XXX | CRTL + <- | CRTL + -> | XXX |   | VOL up   | CTRL LEFT  | CTRL DOWN | CTRL UP | CTRL RIGHT | XXX      |
// | DEL | XXX | XXX | CRTL + v  | CRTL + ^  | XXX |   | Vol down | LEFT       | DOWN      | UP      | RIGHT      |          |
// | XXX | XXX | XXX |  X        |  X        | XXX |   | Mut      | Play/Pause | BACK      | FORWARD | XXX        | TOGGLE 4 | 
//                   |           |           |     |   |          |            |           |
                        bindings = <
   &kp TAB &none &none &kp LC(LEFT) &kp LC(RIGHT) &none      &kp C_VOL_UP &kp LC(LEFT)     &kp LC(DOWN) &kp LC(UP) &kp LC(RIGHT) &none
   &kp DEL &none &none &kp LC(DOWN) &kp LC(UP)    &none      &kp C_VOL_DN &kp LEFT         &kp DOWN     &kp UP     &kp RIGHT     &trans
   &none   &none &none &none        &none         &none      &kp C_MUTE   &kp C_PLAY_PAUSE &kp C_PREV   &kp C_NEXT &none         &tog 4
                       &trans       &trans        &trans     &trans       &trans           &trans
                         >;
                 };
         };
 };
